{"version":3,"sources":["../../test/ribbon.test.js"],"names":["Ribbon","require","chai","assert","serversJson","Eureka","client","instance","app","hostName","ipAddr","port","vipAddress","dataCenterInfo","name","eureka","host","describe","it","start","servers","getInstancesByAppId","value","chooseServer","isNotNaN","isString","equal","JSON","parse","ribbonInstance","chooseServerUrl","match"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,eAAR,CAAb;;AAEA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;;AAEA,IAAIE,SAASD,KAAKC,MAAlB;;AAEA,IAAIC,cAAY,EAAhB;;AAEA,IAAMC,SAASJ,QAAQ,kBAAR,EAA4BI,MAA3C;AACA;;AAEA;AACA,IAAMC,SAAS,IAAID,MAAJ,CAAW;AACtB;AACAE,cAAU;AACNC,aAAK,WADC;AAENC,kBAAU,WAFJ;AAGNC,gBAAQ,WAHF;AAINC,cAAM,IAJA;AAKNC,oBAAY,uBALN;AAMNC,wBAAgB;AACZ,sBAAU,wDADE;AAEZC,kBAAM;AAFM;AANV,KAFY;AAatBC,YAAQ;AACJ;AACAC,cAAM,WAFF;AAGJL,cAAM;AAHF;AAbc,CAAX,CAAf;;AAqBAM,SAAS,QAAT,EAAmB,YAAW;AAC1BA,aAAS,iBAAT,EAA4B,YAAW;AACnCC,WAAG,6BAAH,EAAkC,YAAW;AACzCZ,mBAAOa,KAAP;AACA,gBAAIC,UAAUd,OAAOe,mBAAP,CAA2B,eAA3B,CAAd;AACA,gBAAIC,QAAMtB,OAAOuB,YAAP,CAAoBH,OAApB,CAAV;;AAEA;AACAjB,mBAAOqB,QAAP,CAAgBF,KAAhB;AACAnB,mBAAOsB,QAAP,CAAgBH,MAAMd,GAAtB;AACAL,mBAAOuB,KAAP,CAAaJ,MAAMd,GAAnB,EAAuB,eAAvB;AACH,SATD;AAUH,KAXD;;AAaAS,aAAS,oBAAT,EAA+B,YAAW;AACtCC,WAAG,6BAAH,EAAkC,YAAW;AACzC,gBAAIE,UAAUO,KAAKC,KAAL,CAAWxB,WAAX,CAAd;AACA,gBAAIyB,iBAAe,IAAI7B,MAAJ,EAAnB;AACA,gBAAIsB,QAAMO,eAAeC,eAAf,CAA+BV,OAA/B,CAAV;AACAjB,mBAAOqB,QAAP,CAAgBF,KAAhB;AACAnB,mBAAOsB,QAAP,CAAgBH,KAAhB;AACAnB,mBAAO4B,KAAP,CAAaT,KAAb,EAAmB,OAAnB;AACH,SAPD;AAQH,KATD;AAUH,CAxBD","file":"ribbon.test.js","sourcesContent":["var Ribbon = require('../src/ribbon');\r\n\r\nvar chai = require(\"chai\");\r\n\r\nvar assert = chai.assert\r\n\r\nvar serversJson=\"\"\r\n\r\nconst Eureka = require('eureka-js-client').Eureka;\r\n// import Eureka from 'eureka-js-client';\r\n\r\n// example configuration\r\nconst client = new Eureka({\r\n    // application instance information\r\n    instance: {\r\n        app: 'jqservice',\r\n        hostName: 'localhost',\r\n        ipAddr: '127.0.0.1',\r\n        port: 8080,\r\n        vipAddress: 'jq.test.something.com',\r\n        dataCenterInfo: {\r\n            '@class': 'com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo',\r\n            name: 'MyOwn',\r\n        },\r\n    },\r\n    eureka: {\r\n        // eureka server host / port\r\n        host: 'localhost',\r\n        port: 8761,\r\n    },\r\n});\r\n\r\n\r\ndescribe('ribbon', function() {\r\n    describe('#chooseServer()', function() {\r\n        it('should return choose server', function() {\r\n            client.start();\r\n            var servers = client.getInstancesByAppId('STORE-SERVICE');\r\n            var value=Ribbon.chooseServer(servers)\r\n\r\n            // assert(Array.isArray(value))\r\n            assert.isNotNaN(value)\r\n            assert.isString(value.app)\r\n            assert.equal(value.app,'STORE-SERVICE')\r\n        });\r\n    });\r\n\r\n    describe('#chooseServerUrl()', function() {\r\n        it('should return home page url', function() {\r\n            var servers = JSON.parse(serversJson);\r\n            var ribbonInstance=new Ribbon()\r\n            var value=ribbonInstance.chooseServerUrl(servers)\r\n            assert.isNotNaN(value)\r\n            assert.isString(value)\r\n            assert.match(value,/^http/)\r\n        });\r\n    });\r\n});\r\n"]}