{"version":3,"sources":["../../test/ribbon.test.js"],"names":["Ribbon","require","chai","assert","eureka","describe","it","setTimeout","servers","client","getInstancesByAppId","value","chooseServer","isNotNaN","isString","app","equal","JSON","parse","serversJson","ribbonInstance","chooseServerUrl","match"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,eAAR,CAAb;;AAEA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;;AAEA,IAAIE,SAASD,KAAKC,MAAlB;;AAEA,IAAIC,SAASH,QAAQ,eAAR,CAAb;;AAEAI,SAAS,QAAT,EAAmB,YAAW;AAC1BA,aAAS,iBAAT,EAA4B,YAAW;AACnCC,WAAG,6BAAH,EAAkC,YAAW;AACzCC,uBAAW,YAAW;AAClB,oBAAIC,UAAUJ,OAAOK,MAAP,CAAcC,mBAAd,CAAkC,eAAlC,CAAd;AACA,oBAAIC,QAAMX,OAAOY,YAAP,CAAoBJ,OAApB,CAAV;;AAEA;AACAL,uBAAOU,QAAP,CAAgBF,KAAhB;AACAR,uBAAOW,QAAP,CAAgBH,MAAMI,GAAtB;AACAZ,uBAAOa,KAAP,CAAaL,MAAMI,GAAnB,EAAuB,eAAvB;AACH,aARD,EAQG,IARH;AASH,SAVD;AAWH,KAZD;;AAcAV,aAAS,oBAAT,EAA+B,YAAW;AACtCC,WAAG,6BAAH,EAAkC,YAAW;AACzC,gBAAIE,UAAUS,KAAKC,KAAL,CAAWC,WAAX,CAAd;AACA,gBAAIC,iBAAe,IAAIpB,MAAJ,EAAnB;AACA,gBAAIW,QAAMS,eAAeC,eAAf,CAA+Bb,OAA/B,CAAV;AACAL,mBAAOU,QAAP,CAAgBF,KAAhB;AACAR,mBAAOW,QAAP,CAAgBH,KAAhB;AACAR,mBAAOmB,KAAP,CAAaX,KAAb,EAAmB,OAAnB;AACH,SAPD;AAQH,KATD;AAUH,CAzBD","file":"ribbon.test.js","sourcesContent":["var Ribbon = require('../src/ribbon');\r\n\r\nvar chai = require(\"chai\");\r\n\r\nvar assert = chai.assert\r\n\r\nvar eureka = require(\"./eureka.test\");\r\n\r\ndescribe('ribbon', function() {\r\n    describe('#chooseServer()', function() {\r\n        it('should return choose server', function() {\r\n            setTimeout(function() {\r\n                var servers = eureka.client.getInstancesByAppId('STORE-SERVICE');\r\n                var value=Ribbon.chooseServer(servers)\r\n\r\n                // assert(Array.isArray(value))\r\n                assert.isNotNaN(value)\r\n                assert.isString(value.app)\r\n                assert.equal(value.app,'STORE-SERVICE')\r\n            }, 5000);\r\n        });\r\n    });\r\n\r\n    describe('#chooseServerUrl()', function() {\r\n        it('should return home page url', function() {\r\n            var servers = JSON.parse(serversJson);\r\n            var ribbonInstance=new Ribbon()\r\n            var value=ribbonInstance.chooseServerUrl(servers)\r\n            assert.isNotNaN(value)\r\n            assert.isString(value)\r\n            assert.match(value,/^http/)\r\n        });\r\n    });\r\n});\r\n"]}